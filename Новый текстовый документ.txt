<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>StrategyN1Bot ‚Äî 5m Pro Strategy</title>
  <style>
    body { background: #0b0c10; color: #c5c6c7; font-family: Arial, sans-serif; padding: 20px; }
    h1 { color: #66fcf1; text-align: center; }
    .log { height: 60vh; overflow-y: scroll; background: #1f2833; padding: 10px; border-radius: 5px; font-family: monospace; }
    .signal { margin-bottom:10px; padding:8px; border:1px solid #66fcf1; border-radius:5px; }
  </style>
</head>
<body>
  <h1>üöÄ StrategyN1Bot ‚Äì 5m Pro Scanner</h1>
  <div class="log" id="log">–ó–∞–ø—É—Å–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏... –æ–∂–∏–¥–∞–π—Ç–µ —Å–∏–≥–Ω–∞–ª—ã.</div>

  <script>
    const TOKEN = "7491438546:AAEJpGBzOS7h_X54kYyrFks96FVehvwIIig";
    const CHAT_ID = "1683260478";
    const SYMBOLS = Array.from(new Set(`ADA,XRP,DOT,DOGE,SOL,LTC,TRX,AVAX,LINK,ATOM,FLM,ALGO,VET,XLM,THETA,FIL,ENS,SHIB,UNI,SUSHI,1INCH,COMP,YFI,CRV,SNX,MKR,BAL,ZRX,BNT,KNC,STX,TWT,BAND,CTSI,DODO,PUNDIX,RUNE,CELO,CHZ,HBAR,HOT,ICX,LRC,NKN,QTUM,RSR,SAND,SKL,STORJ,WCT,XTZ,ZIL,EGLD,HNT,KAVA,MINA,NEAR,RENDER,XEM,BAT,DGB,DUSK,EDU,GRT,IOST,KSM,LINA,MANA,MASK,OGN, PAXG,PERP,RLC,SFP,SUN,TRB,ALPHA,API3,BADGER,BEL,BUSD,CTK,LPT,MBOX,POL,QUICK,SLP,SXP,ANKR,ARPA,AUDIO,COTI,DENT,DYDX,ENJ,ICP,LUNA,ONE,SC,WAVES,HIFI,SEI,LQTY,APT,SHELL,CHESS,HUMA,T,ALT,SIGN,TON,XVG,NIL`.split(","))).map(s=>s+"USDT");
    const TF="5m", LIMIT=50;
    const MIN_VOL_MULT=2; // –æ–±—ä—ë–º –º–∏–Ω–∏–º—É–º –≤ 2 —Ä–∞–∑–∞ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ
    const INTERVAL=5*60*1000;
    const logEl=document.getElementById("log");
    function log(t){ logEl.textContent=`[${new Date().toLocaleTimeString()}] ${t}\n`+logEl.textContent; }

    async function fetchOH(symbol){
      let r=await fetch(`https://api.binance.com/api/v3/klines?symbol=${symbol}&interval=${TF}&limit=${LIMIT}`);
      if(!r.ok) throw r.statusText;
      return r.json();
    }

    function RSI(arr, period=14){
      let gains=0, losses=0;
      for(let i=1;i<arr.length;i++){
        let d=arr[i]-arr[i-1];
        if(d>0) gains+=d; else losses+=-d;
      }
      let rs=(gains/period)/(losses/period||1);
      return 100-(100/(1+rs));
    }

    function EMA(arr, period){
      let k=2/(period+1), ema=[arr.slice(0,period).reduce((a,b)=>a+b)/period];
      for(let i=period;i<arr.length;i++) ema.push(arr[i]*k + ema[ema.length-1]*(1-k));
      return ema;
    }

    async function scan(){
      for(let s of SYMBOLS){
        try{
          let ks=await fetchOH(s);
          let closes=ks.map(c=>+c[4]), highs=ks.map(c=>+c[2]), lows=ks.map(c=>+c[3]), vols=ks.map(c=>+c[5]);
          let avgVol=vols.slice(-20).reduce((a,b)=>a+b)/20;
          let curVol=vols[vols.length-2];
          if(curVol<avgVol*MIN_VOL_MULT) continue;

          let rsival=RSI(closes.slice(-15));
          let ema5=EMA(closes,5).slice(-1)[0], ema20=EMA(closes,20).slice(-1)[0];
          let last=closes[closes.length-2];
          if(!( (ema5>ema20&&rsival>50) || (ema5<ema20&&rsival<50) )) continue;

          let maxH=Math.max(...highs.slice(-20)), minL=Math.min(...lows.slice(-20));
          let entry=last, stop=minL, take=entry+(entry-stop)*4;
          let rr=(take-entry)/(entry-stop);
          if(rr<3.9||rr>4.1) continue;

          let dir=ema5>ema20?"LONG":"SHORT";
          let msg=`<b>${s.replace("USDT","")}</b> ‚û°Ô∏è <b>${dir}</b>\n` +
            `TF:5m üìà Entry:${entry.toFixed(4)} SL:${stop.toFixed(4)} TP:${take.toFixed(4)}\n` +
            `R:R=1:${rr.toFixed(2)} üìä EMA5/${ema5.toFixed(2)}‚ÜïEMA20/${ema20.toFixed(2)} RSI:${rsival.toFixed(1)} Vol>${(curVol/avgVol).toFixed(1)}x`;
          await fetch(`https://api.telegram.org/bot${TOKEN}/sendMessage`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({chat_id:CHAT_ID,text:msg,parse_mode:"HTML"})});
          log(`üîî Signal ${s} ${dir}`);
        }catch(e){ /* silent */ }
      }
    }

    scan(); setInterval(scan,INTERVAL);
  </script>
</body>
</html>